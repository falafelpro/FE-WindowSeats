{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { makeAutoObservable } from \"mobx\";\nimport { instance } from \"./instance\";\n\nvar TripStore = function TripStore() {\n  var _this = this;\n\n  _classCallCheck(this, TripStore);\n\n  this.trips = [{\n    title: \"France Weekend\",\n    description: \"best weekend ever, so much love\"\n  }];\n  this.loading = true;\n\n  this.fetchTrips = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.get(\"/trips\"));\n\n          case 3:\n            response = _context.sent;\n            _this.trips = response.data;\n            _this.loading = false;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ShopStore -> fetchShops -> error\", _context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  makeAutoObservable(this);\n};\n\nvar tripStore = new TripStore();\ntripStore.fetchTrips();\nexport default tripStore;","map":{"version":3,"sources":["C:/Users/hussa/Development/ReactNative/FE-WindowSeats/Stores/tripStore.js"],"names":["makeAutoObservable","instance","TripStore","trips","title","description","loading","fetchTrips","get","response","data","console","log","tripStore"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,QAAT;;IAEMC,S,GACJ,qBAAc;AAAA;;AAAA;;AAAA,OAKdC,KALc,GAKN,CACN;AACEC,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADM,CALM;AAAA,OAYdC,OAZc,GAYJ,IAZI;;AAAA,OAcdC,UAdc,GAcD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcN,QAAQ,CAACO,GAAT,CAAa,QAAb,CAFd;;AAAA;AAEHC,YAAAA,QAFG;AAIT,YAAA,KAAI,CAACN,KAAL,GAAaM,QAAQ,CAACC,IAAtB;AACA,YAAA,KAAI,CAACJ,OAAL,GAAe,KAAf;AALS;AAAA;;AAAA;AAAA;AAAA;AAOTK,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAdC;;AACZZ,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAED,C;;AAuBH,IAAMa,SAAS,GAAG,IAAIX,SAAJ,EAAlB;AACAW,SAAS,CAACN,UAAV;AAEA,eAAeM,SAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { instance } from \"./instance\";\r\n\r\nclass TripStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    // this will turn our class into a mobx store and all components can observe the changes that happen in the store\r\n  }\r\n\r\n  trips = [\r\n    {\r\n      title: \"France Weekend\",\r\n      description: \"best weekend ever, so much love\",\r\n    },\r\n  ];\r\n\r\n  loading = true;\r\n\r\n  fetchTrips = async () => {\r\n    try {\r\n      const response = await instance.get(\"/trips\");\r\n      // console.log(response.data);\r\n      this.trips = response.data;\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.log(\"ShopStore -> fetchShops -> error\", error);\r\n    }\r\n  };\r\n}\r\n\r\nconst tripStore = new TripStore();\r\ntripStore.fetchTrips();\r\n\r\nexport default tripStore;\r\n"]},"metadata":{},"sourceType":"module"}