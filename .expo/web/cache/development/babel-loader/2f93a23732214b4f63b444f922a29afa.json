{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport profileStore from \"../../Stores/profileStore\";\nimport { Box, Heading, VStack, FormControl, Input, Button, HStack, Center, Link } from \"native-base\";\n\nvar ProfileUpdate = function ProfileUpdate(_ref) {\n  var oldProfile = _ref.oldProfile,\n      navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(profileStore.updateProfiles(profile, navigation));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Center, null, React.createElement(Box, {\n    safeArea: true,\n    p: \"2\",\n    py: \"8\",\n    w: \"90%\",\n    maxW: \"500\"\n  }, React.createElement(Heading, {\n    size: \"lg\",\n    fontWeight: \"600\",\n    color: \"coolGray.800\",\n    _dark: {\n      color: \"warmGray.50\"\n    }\n  }, \"Update Your Profile!\"), React.createElement(Heading, {\n    mt: \"1\",\n    _dark: {\n      color: \"warmGray.200\"\n    },\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Tell us about yourself!\"), React.createElement(VStack, {\n    space: 5,\n    mt: \"5\"\n  }, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Description\"), React.createElement(Input, {\n    onChangeText: function onChangeText(description) {\n      return setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n        description: description\n      }));\n    }\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Upload your image\"), React.createElement(Input, {\n    type: \"password\",\n    onChangeText: function onChangeText(image) {\n      return setProfile(_objectSpread(_objectSpread({}, profile), {}, {\n        image: image\n      }));\n    }\n  })), React.createElement(Button, {\n    mt: \"2\",\n    colorScheme: \"indigo\",\n    onPress: handleSubmit\n  }, \"Update\"), React.createElement(HStack, {\n    mt: \"6\",\n    justifyContent: \"center\"\n  }))));\n};\n\nexport default ProfileUpdate;","map":{"version":3,"sources":["C:/Users/hussa/Development/ReactNative/FE-WindowSeats/Components/Profile/ProfileUpdate.js"],"names":["React","useState","profileStore","Box","Heading","VStack","FormControl","Input","Button","HStack","Center","Link","ProfileUpdate","oldProfile","navigation","profile","setProfile","handleSubmit","updateProfiles","color","description","image"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP;AACA,SACEC,GADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,MARF,EASEC,IATF,QAUO,aAVP;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACpD,kBAA8Bb,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,UAAhB;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbf,YAAY,CAACgB,cAAb,CAA4BH,OAA5B,EAAqCD,UAArC,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SACE,oBAAC,MAAD,QACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,MAAb;AAAc,IAAA,CAAC,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,CAAC,EAAC,KAA7B;AAAmC,IAAA,IAAI,EAAC;AAAxC,KACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,UAAU,EAAC,KAFb;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAE;AADF;AAJT,4BADF,EAWE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAE;AADF,KAFT;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,UAAU,EAAC,QANb;AAOE,IAAA,IAAI,EAAC;AAPP,+BAXF,EAuBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAC;AAArB,KACE,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,KAAb,sBADF,EAEE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAE,sBAACC,WAAD;AAAA,aACZJ,UAAU,iCAAMD,OAAN;AAAeK,QAAAA,WAAW,EAAXA;AAAf,SADE;AAAA;AADhB,IAFF,CADF,EASE,oBAAC,WAAD,QACE,oBAAC,WAAD,CAAa,KAAb,4BADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,aAAWL,UAAU,iCAAMD,OAAN;AAAeM,QAAAA,KAAK,EAALA;AAAf,SAArB;AAAA;AAFhB,IAFF,CATF,EAgBE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,WAAW,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAEJ;AAA7C,cAhBF,EAmBE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,cAAc,EAAC;AAA9B,IAnBF,CAvBF,CADF,CADF;AAiDD,CA3DD;;AA6DA,eAAeL,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport profileStore from \"../../Stores/profileStore\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  HStack,\r\n  Center,\r\n  Link,\r\n} from \"native-base\";\r\n\r\nconst ProfileUpdate = ({ oldProfile, navigation }) => {\r\n  const [profile, setProfile] = useState({\r\n    // description: oldProfile.description,\r\n    // image: oldProfile.image,\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    await profileStore.updateProfiles(profile, navigation);\r\n  };\r\n\r\n  return (\r\n    <Center>\r\n      <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"500\">\r\n        <Heading\r\n          size=\"lg\"\r\n          fontWeight=\"600\"\r\n          color=\"coolGray.800\"\r\n          _dark={{\r\n            color: \"warmGray.50\",\r\n          }}\r\n        >\r\n          Update Your Profile!\r\n        </Heading>\r\n        <Heading\r\n          mt=\"1\"\r\n          _dark={{\r\n            color: \"warmGray.200\",\r\n          }}\r\n          color=\"coolGray.600\"\r\n          fontWeight=\"medium\"\r\n          size=\"xs\"\r\n        >\r\n          Tell us about yourself!\r\n        </Heading>\r\n\r\n        <VStack space={5} mt=\"5\">\r\n          <FormControl>\r\n            <FormControl.Label>Description</FormControl.Label>\r\n            <Input\r\n              onChangeText={(description) =>\r\n                setProfile({ ...profile, description })\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Upload your image</FormControl.Label>\r\n            <Input\r\n              type=\"password\"\r\n              onChangeText={(image) => setProfile({ ...profile, image })}\r\n            />\r\n          </FormControl>\r\n          <Button mt=\"2\" colorScheme=\"indigo\" onPress={handleSubmit}>\r\n            Update\r\n          </Button>\r\n          <HStack mt=\"6\" justifyContent=\"center\"></HStack>\r\n        </VStack>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default ProfileUpdate;\r\n"]},"metadata":{},"sourceType":"module"}